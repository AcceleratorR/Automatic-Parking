<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from em_3905.urdf.xacro             | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!-- em_3905.urdf.xacro

This file defines a model of a Traxxas(R) E-Maxx(R) #3905 RC (Radio Controlled)
truck.

Lengths are measured in meters, angles are measured in radians, and masses are
measured in kilograms. All of these values are approximations.

To work with Gazebo, each link must have an inertial element, even if
the link only serves to connect two joints. To be visible in Gazebo, a link
must have a collision element. Furthermore, the link must have a Gazebo
material.

Traxxas(R), E-Maxx(R), and Titan(R) are registered trademarks of Traxxas
Management, LLC. em_3905.urdf.xacro was independently created by Wunderkammer
Laboratory, and neither em_3905.urdf.xacro nor Wunderkammer Laboratory is
affiliated with, sponsored by, approved by, or endorsed by Traxxas Management,
LLC. Mabuchi Motor(R) is a registered trademark of Mabuchi Motor Co., Ltd.
Corporation Japan. All other trademarks and service marks are the property of
their respective owners.

Copyright (c) 2011-2013 Wunderkammer Laboratory

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
-->
<robot name="em_3905" xmlns:xacro="http://ros.org/wiki/xacro">
  <!-- include files -->
  <!-- Degree-to-radian conversions -->
  <!-- User define Stereo_Cam1 -->
  <!-- stereo_camera_model&param_macro -->
  <!-- Create stereo_basler model -->
  <link name="stereo_basler">
    <visual>
      <origin rpy="1.570795 0 3.14159" xyz="0 -0.015 -0.015"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/basler.stl"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <joint name="basler_basler_l_to_basler_r" type="fixed">
    <parent link="stereo_basler"/>
    <child link="basler_basler_r"/>
  </joint>
  <link name="basler_basler_r">
    <visual>
      <origin rpy="1.570795 0 3.14159" xyz="0 -0.07 -0.015"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/basler.stl"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <!--optical position parameter-->
  <joint name="basler_optical_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="stereo_basler"/>
    <child link="basler_frame_optical"/>
  </joint>
  <link name="basler_frame_optical"/>
  <!--camera sensor parameter-->
  <gazebo reference="basler_frame_optical">
    <sensor name="basler_stereo_camera" type="multicamera">
      <update_rate>30.0</update_rate>
      <camera name="left">
        <pose>0 0 0 0 0 0</pose>
        <!--pose>0 0.155 0 0 0 0</pose-->
        <horizontal_fov>1.57079633</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.055 0 0 0 0</pose>
        <!--pose>0 0.548 0 3.14 0 0</pose-->
        <horizontal_fov>1.57079633</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!--cameraName>multisense_sl/camera</cameraName-->
        <cameraName>multi/camera/basler</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>basler_frame_optical</frameName>
        <!--<rightFrameName>${prefix}_frame_optical</rightFrameName>-->
        <foclLength>320.000101</foclLength>
        <hackBaseline>0.055</hackBaseline>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <!-- stereo_camera1_frame_joint -->
  <joint name="stereo_camera_frame_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0.26 0.0 0.085"/>
    <parent link="base_link"/>
    <child link="stereo_basler"/>
  </joint>
  <!-- Create stereo_basler model -->
  <link name="stereo_basler2">
    <visual>
      <origin rpy="1.570795 0 3.14159" xyz="0 -0.015 -0.015"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/basler.stl"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <joint name="basler2_basler_l_to_basler_r" type="fixed">
    <parent link="stereo_basler2"/>
    <child link="basler2_basler_r"/>
  </joint>
  <link name="basler2_basler_r">
    <visual>
      <origin rpy="1.570795 0 3.14159" xyz="0 -0.07 -0.015"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/basler.stl"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <!--optical position parameter-->
  <joint name="basler2_optical_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="stereo_basler2"/>
    <child link="basler2_frame_optical"/>
  </joint>
  <link name="basler2_frame_optical"/>
  <!--camera sensor parameter-->
  <gazebo reference="basler2_frame_optical">
    <sensor name="basler2_stereo_camera" type="multicamera">
      <update_rate>30.0</update_rate>
      <camera name="left">
        <pose>0 0 0 0 0 0</pose>
        <!--pose>0 0.155 0 0 0 0</pose-->
        <horizontal_fov>1.57079633</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.055 0 0 0 0</pose>
        <!--pose>0 0.548 0 3.14 0 0</pose-->
        <horizontal_fov>1.57079633</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!--cameraName>multisense_sl/camera</cameraName-->
        <cameraName>multi/camera/basler2</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>basler2_frame_optical</frameName>
        <!--<rightFrameName>${prefix}_frame_optical</rightFrameName>-->
        <foclLength>320.000101</foclLength>
        <hackBaseline>0.055</hackBaseline>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="stereo_camera2_frame_joint" type="fixed">
    <origin rpy="0 0 4.71238633" xyz="0.04 -0.18 0.085"/>
    <parent link="base_link"/>
    <child link="stereo_basler2"/>
  </joint>
  <!-- Create stereo_basler model -->
  <link name="stereo_basler3">
    <visual>
      <origin rpy="1.570795 0 3.14159" xyz="0 -0.015 -0.015"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/basler.stl"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <joint name="basler3_basler_l_to_basler_r" type="fixed">
    <parent link="stereo_basler3"/>
    <child link="basler3_basler_r"/>
  </joint>
  <link name="basler3_basler_r">
    <visual>
      <origin rpy="1.570795 0 3.14159" xyz="0 -0.07 -0.015"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/basler.stl"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <!--optical position parameter-->
  <joint name="basler3_optical_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="stereo_basler3"/>
    <child link="basler3_frame_optical"/>
  </joint>
  <link name="basler3_frame_optical"/>
  <!--camera sensor parameter-->
  <gazebo reference="basler3_frame_optical">
    <sensor name="basler3_stereo_camera" type="multicamera">
      <update_rate>30.0</update_rate>
      <camera name="left">
        <pose>0 0 0 0 0 0</pose>
        <!--pose>0 0.155 0 0 0 0</pose-->
        <horizontal_fov>1.57079633</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.055 0 0 0 0</pose>
        <!--pose>0 0.548 0 3.14 0 0</pose-->
        <horizontal_fov>1.57079633</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!--cameraName>multisense_sl/camera</cameraName-->
        <cameraName>multi/camera/basler3</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>basler3_frame_optical</frameName>
        <!--<rightFrameName>${prefix}_frame_optical</rightFrameName>-->
        <foclLength>320.000101</foclLength>
        <hackBaseline>0.055</hackBaseline>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="stereo_camera3_frame_joint" type="fixed">
    <origin rpy="0 0 3.14159" xyz="-0.3 -0.0485 0.085"/>
    <parent link="base_link"/>
    <child link="stereo_basler3"/>
  </joint>
  <!-- Create stereo_basler model -->
  <link name="stereo_basler4">
    <visual>
      <origin rpy="1.570795 0 3.14159" xyz="0 -0.015 -0.015"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/basler.stl"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <joint name="basler4_basler_l_to_basler_r" type="fixed">
    <parent link="stereo_basler4"/>
    <child link="basler4_basler_r"/>
  </joint>
  <link name="basler4_basler_r">
    <visual>
      <origin rpy="1.570795 0 3.14159" xyz="0 -0.07 -0.015"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/basler.stl"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <!--optical position parameter-->
  <joint name="basler4_optical_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="stereo_basler4"/>
    <child link="basler4_frame_optical"/>
  </joint>
  <link name="basler4_frame_optical"/>
  <!--camera sensor parameter-->
  <gazebo reference="basler4_frame_optical">
    <sensor name="basler4_stereo_camera" type="multicamera">
      <update_rate>30.0</update_rate>
      <camera name="left">
        <pose>0 0 0 0 0 0</pose>
        <!--pose>0 0.155 0 0 0 0</pose-->
        <horizontal_fov>1.57079633</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <camera name="right">
        <pose>0 -0.055 0 0 0 0</pose>
        <!--pose>0 0.548 0 3.14 0 0</pose-->
        <horizontal_fov>1.57079633</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_multicamera.so" name="stereo_camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <!--cameraName>multisense_sl/camera</cameraName-->
        <cameraName>multi/camera/basler4</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>basler4_frame_optical</frameName>
        <!--<rightFrameName>${prefix}_frame_optical</rightFrameName>-->
        <foclLength>320.000101</foclLength>
        <hackBaseline>0.055</hackBaseline>
        <distortionK1>0</distortionK1>
        <distortionK2>0</distortionK2>
        <distortionK3>0</distortionK3>
        <distortionT1>0</distortionT1>
        <distortionT2>0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  <joint name="stereo_camera4_frame_joint" type="fixed">
    <origin rpy="0 0 1.570795" xyz="-0.02 0.18 0.085"/>
    <parent link="base_link"/>
    <child link="stereo_basler4"/>
  </joint>
  <!-- chassis_length is measured along the x axis, chassis_width
       along the y axis, and chassis_height along the z axis. -->
  <!-- battery_dist is the distance between the inner edges of the
       batteries. battery_comp_depth is the battery compartment depth.
       battery_length is measured along the x axis, battery_width
       along the y axis, and battery_height along the z axis. 

  <xacro:property name="battery_comp_angle" value="0.34906585"/>

-->
  <!-- hub_dia and tire_dia are the diameters of the hub and tire,
       respectively. hex_hub_depth is the distance that the hex hub is
       inset from the outer edge of the tire. It is set so that each wheel
       is a "zero offset" wheel. hex_hub_depth = tire_width / 2 -
       axle_length. -->
  <!-- hex_hub_dist is the distance between left and right hex hubs when
       the shock absorbers are fully extended. axle_length is the distance
       from a U joint to the corresponding hex hub. wheel_travel is the
       vertical wheel travel. -->
  <!-- shock_eff_limit is 2 * ((shock_stroke / 2) * shock_spring_constant) N.
       shock_stroke is 0.028575 meters. shock_spring_constant, an approximation
       of a Traxxas Ultra Shock shock absorber spring's constant, is
       437.817 N/m. -->
  <!-- The specifications for a Titan(R) 550 motor could not be found, so the
       stall torque of a Mabuchi Motor(R) RS-550VC-7525 motor was used instead.

       num_spur_gear_teeth = 68
       num_pinion_gear_teeth = 19
       final_gear_ratio = (num_spur_gear_teeth / num_pinion_gear_teeth) *
         5.22 = 18.68
       stall_torque = 0.549 N m
       axle_eff_limit = ((2 * stall_torque) * final_gear_ratio) / 4 =
         5.12766 N m

       max_speed = 40 mph (30+ mph) = 17.8816 m/s
       axle_vel_limit = (2 * pi) * (max_speed / (pi * tire_dia)) =
         244.8696 rad/s -->
  <!-- These constants are used to simulate a Traxxas 2056 servo operated at
       6 V. servo_stall_torque is measured in N m. servo_no_load_speed is
       measured in rad/s. -->
  <!-- ctrl_period is gazebo_ros_control's control period. Unit: hertz. -->
  <material name="battery_mat">
    <color rgba="0 0 1 1"/>
  </material>
  <material name="chassis_mat">
    <color rgba="0.5 0.5 0.5 1"/>
  </material>
  <material name="body_mat">
    <color rgba="1 0 0 1"/>
  </material>
  <material name="tire_mat">
    <color rgba="0 0 0 1"/>
  </material>
  <!-- Null inertial element. This is needed to make the model work with
       Gazebo. -->
  <!-- Inertia of a solid cuboid. Width is measured along the x axis, depth
       along the y axis, and height along the z axis. -->
  <!-- Inertia of a thick-walled cylindrical tube with open ends. Height is
       measured along the z axis, which is the tube's axis. inner_rad and
       outer_rad are the tube's inner and outer radii, respectively. -->
  <!-- Battery -->
  <!-- Shock absorber -->
  <!-- The "wheel" macro defines an axle carrier, axle, and wheel. -->
  <!-- Front wheel -->
  <!-- Rear wheel -->
  <!-- base_link must have geometry so that its axes can be displayed in
       rviz. 
          <mesh><uri>model://meshes/body.stl</uri>
          <scale>1.8 1.8 1.8</scale>

-->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="0.1 0.1 0.01"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
  </link>
  <gazebo reference="base_link">
    <material>Gazebo/Grey</material>
  </gazebo>
  <!-- Chassis -->
  <link name="chassis">
    <visual>
      <origin xyz="0 0 -0.005"/>
      <geometry>
        <box size="0.258 0.168 0.01"/>
      </geometry>
      <material name="chassis_mat"/>
    </visual>
    <collision>
      <origin xyz="0 0 -0.005"/>
      <geometry>
        <box size="0.258 0.168 0.01"/>
      </geometry>
    </collision>
    <inertial>
      <origin xyz="0 0 -0.005"/>
      <mass value="2.788"/>
      <inertia ixx="0.00658060933333" ixy="0" ixz="0" iyy="0.0154882693333" iyz="0" izz="0.022022412"/>
    </inertial>
  </link>
  <gazebo reference="chassis">
    <material>Gazebo/Grey</material>
  </gazebo>
  <joint name="base_link_to_chasis" type="fixed">
    <parent link="base_link"/>
    <child link="chassis"/>
  </joint>
  <!-- body -->
  <link name="body">
    <visual>
      <origin rpy="1.57 0 -1.57" xyz="0.25 0.15 0.0"/>
      <geometry>
        <mesh filename="package://ackermann_vehicle_description/urdf/meshes/body.stl"/>
      </geometry>
      <material name="body_mat"/>
    </visual>
  </link>
  <gazebo reference="body">
    <material>Gazebo/Red</material>
  </gazebo>
  <joint name="chasis_link_to_body" type="fixed">
    <parent link="chassis"/>
    <child link="body"/>
  </joint>
  <!-- Batteries -->
  <joint name="chassis_to_left_battery" type="fixed">
    <parent link="chassis"/>
    <child link="left_battery_offset"/>
    <origin rpy="0.0 0 0" xyz="-0.025                    0.0325                    0"/>
  </joint>
  <link name="left_battery_offset">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="offset_to_left_battery" type="fixed">
    <parent link="left_battery_offset"/>
    <child link="left_battery"/>
    <origin xyz="0                    0.0235                    -0.008"/>
  </joint>
  <link name="left_battery">
    <visual>
      <geometry>
        <box size="0.16 0.047 0.024"/>
      </geometry>
      <material name="battery_mat"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.16 0.047 0.024"/>
      </geometry>
    </collision>
    <inertial>
      <origin/>
      <mass value="0.5025"/>
      <inertia ixx="0.000116621875" ixy="0" ixz="0" iyy="0.00109612" iyz="0" izz="0.001164501875"/>
    </inertial>
  </link>
  <gazebo reference="left_battery">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <!--   <gazebo reference="${prefix}_battery">
      <material>Gazebo/Blue</material>
    </gazebo>-->
  <joint name="chassis_to_right_battery" type="fixed">
    <parent link="chassis"/>
    <child link="right_battery_offset"/>
    <origin rpy="-0.0 0 0" xyz="-0.025                    -0.0325                    0"/>
  </joint>
  <link name="right_battery_offset">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="offset_to_right_battery" type="fixed">
    <parent link="right_battery_offset"/>
    <child link="right_battery"/>
    <origin xyz="0                    -0.0235                    -0.008"/>
  </joint>
  <link name="right_battery">
    <visual>
      <geometry>
        <box size="0.16 0.047 0.024"/>
      </geometry>
      <material name="battery_mat"/>
    </visual>
    <collision>
      <geometry>
        <box size="0.16 0.047 0.024"/>
      </geometry>
    </collision>
    <inertial>
      <origin/>
      <mass value="0.5025"/>
      <inertia ixx="0.000116621875" ixy="0" ixz="0" iyy="0.00109612" iyz="0" izz="0.001164501875"/>
    </inertial>
  </link>
  <gazebo reference="right_battery">
    <material>Gazebo/Yellow</material>
  </gazebo>
  <!--   <gazebo reference="${prefix}_battery">
      <material>Gazebo/Blue</material>
    </gazebo>-->
  <!-- Wheels -->
  <joint name="left_front_shock" type="prismatic">
    <parent link="chassis"/>
    <child link="left_steering_link"/>
    <origin xyz="0.1675                    0.1525                    -0.0235"/>
    <axis xyz="0 0 -1"/>
    <limit effort="12.5106" lower="-0.042" upper="0.042" velocity="1000"/>
  </joint>
  <transmission name="left_front_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_front_shock_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_front_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="left_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="left_steering_joint" type="revolute">
    <parent link="left_steering_link"/>
    <child link="left_front_axle_carrier"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.5649" lower="-0.785398163" upper="0.785398163" velocity="4.553"/>
  </joint>
  <transmission name="left_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_steering_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_steering_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="left_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="left_front_axle" type="continuous">
    <parent link="left_front_axle_carrier"/>
    <child link="left_front_wheel"/>
    <origin rpy="1.57079633 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="5.12766" velocity="244.8696"/>
  </joint>
  <transmission name="left_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_front_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_front_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="left_front_wheel">
    <visual>
      <origin xyz="0                      -6.93889390391e-18                      0"/>
      <geometry>
        <cylinder length="0.0889" radius="0.073025"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      -6.93889390391e-18                      0"/>
      <geometry>
        <cylinder length="0.0889" radius="0.073025"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.29"/>
      <inertia ixx="0.000746465912979" ixy="0" ixz="0" iyy="0.000746465912979" iyz="0" izz="0.00111094334263"/>
    </inertial>
  </link>
  <gazebo reference="left_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="right_front_shock" type="prismatic">
    <parent link="chassis"/>
    <child link="right_steering_link"/>
    <origin xyz="0.1675                    -0.1525                    -0.0235"/>
    <axis xyz="0 0 -1"/>
    <limit effort="12.5106" lower="-0.042" upper="0.042" velocity="1000"/>
  </joint>
  <transmission name="right_front_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_front_shock_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_front_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="right_steering_link">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <joint name="right_steering_joint" type="revolute">
    <parent link="right_steering_link"/>
    <child link="right_front_axle_carrier"/>
    <axis xyz="0 0 1"/>
    <limit effort="0.5649" lower="-0.785398163" upper="0.785398163" velocity="4.553"/>
  </joint>
  <transmission name="right_steering_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_steering_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_steering_joint">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="right_front_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="right_front_axle" type="continuous">
    <parent link="right_front_axle_carrier"/>
    <child link="right_front_wheel"/>
    <origin rpy="1.57079633 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="5.12766" velocity="244.8696"/>
  </joint>
  <transmission name="right_front_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_front_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_front_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="right_front_wheel">
    <visual>
      <origin xyz="0                      6.93889390391e-18                      0"/>
      <geometry>
        <cylinder length="0.0889" radius="0.073025"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      6.93889390391e-18                      0"/>
      <geometry>
        <cylinder length="0.0889" radius="0.073025"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.29"/>
      <inertia ixx="0.000746465912979" ixy="0" ixz="0" iyy="0.000746465912979" iyz="0" izz="0.00111094334263"/>
    </inertial>
  </link>
  <gazebo reference="right_front_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="left_rear_shock" type="prismatic">
    <parent link="chassis"/>
    <child link="left_rear_axle_carrier"/>
    <origin xyz="-0.1675                    0.1525                    -0.0235"/>
    <axis xyz="0 0 -1"/>
    <limit effort="12.5106" lower="-0.042" upper="0.042" velocity="1000"/>
  </joint>
  <transmission name="left_rear_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_rear_shock_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_rear_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="left_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="left_rear_axle" type="continuous">
    <parent link="left_rear_axle_carrier"/>
    <child link="left_rear_wheel"/>
    <origin rpy="1.57079633 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="5.12766" velocity="244.8696"/>
  </joint>
  <transmission name="left_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="left_rear_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="left_rear_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="left_rear_wheel">
    <visual>
      <origin xyz="0                      -6.93889390391e-18                      0"/>
      <geometry>
        <cylinder length="0.0889" radius="0.073025"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      -6.93889390391e-18                      0"/>
      <geometry>
        <cylinder length="0.0889" radius="0.073025"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.29"/>
      <inertia ixx="0.000746465912979" ixy="0" ixz="0" iyy="0.000746465912979" iyz="0" izz="0.00111094334263"/>
    </inertial>
  </link>
  <gazebo reference="left_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <joint name="right_rear_shock" type="prismatic">
    <parent link="chassis"/>
    <child link="right_rear_axle_carrier"/>
    <origin xyz="-0.1675                    -0.1525                    -0.0235"/>
    <axis xyz="0 0 -1"/>
    <limit effort="12.5106" lower="-0.042" upper="0.042" velocity="1000"/>
  </joint>
  <transmission name="right_rear_shock_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_rear_shock_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_rear_shock">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="right_rear_axle_carrier">
    <inertial>
      <mass value="0.001"/>
      <inertia ixx="0.001" ixy="0" ixz="0" iyy="0.001" iyz="0" izz="0.001"/>
    </inertial>
  </link>
  <!-- The left and right axles have the same axis so that identical
         rotation values cause the wheels to rotate in the same direction. -->
  <joint name="right_rear_axle" type="continuous">
    <parent link="right_rear_axle_carrier"/>
    <child link="right_rear_wheel"/>
    <origin rpy="1.57079633 0 0"/>
    <axis xyz="0 0 -1"/>
    <limit effort="5.12766" velocity="244.8696"/>
  </joint>
  <transmission name="right_rear_axle_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <actuator name="right_rear_axle_act">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
    <joint name="right_rear_axle">
      <hardwareInterface>EffortJointInterface</hardwareInterface>
    </joint>
  </transmission>
  <link name="right_rear_wheel">
    <visual>
      <origin xyz="0                      6.93889390391e-18                      0"/>
      <geometry>
        <cylinder length="0.0889" radius="0.073025"/>
      </geometry>
      <material name="tire_mat"/>
    </visual>
    <collision>
      <origin xyz="0                      6.93889390391e-18                      0"/>
      <geometry>
        <cylinder length="0.0889" radius="0.073025"/>
      </geometry>
    </collision>
    <inertial>
      <mass value="0.29"/>
      <inertia ixx="0.000746465912979" ixy="0" ixz="0" iyy="0.000746465912979" iyz="0" izz="0.00111094334263"/>
    </inertial>
  </link>
  <gazebo reference="right_rear_wheel">
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <!-- As of 10/7/13, setting controlPeriod to a value greater than
           Gazebo's simulation period prevents the shock absorbers from
           working.
      <controlPeriod>${ctrl_period}</controlPeriod>
      -->
    </plugin>
  </gazebo>
</robot>
